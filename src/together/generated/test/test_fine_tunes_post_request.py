# coding: utf-8

"""
    Together APIs

    The Together REST API. Please see https://docs.together.ai for more details.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from together.generated.models.fine_tunes_post_request import FineTunesPostRequest


class TestFineTunesPostRequest(unittest.TestCase):
    """FineTunesPostRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FineTunesPostRequest:
        """Test FineTunesPostRequest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `FineTunesPostRequest`
        """
        model = FineTunesPostRequest()
        if include_optional:
            return FineTunesPostRequest(
                training_file = '',
                validation_file = '',
                model = '',
                n_epochs = 56,
                n_checkpoints = 56,
                n_evals = 56,
                batch_size = 56,
                learning_rate = 1.337,
                lr_scheduler = together.generated.models.lr_scheduler.LRScheduler(
                    lr_scheduler_type = '',
                    lr_scheduler_args = together.generated.models.linear_lr_scheduler_args.LinearLRSchedulerArgs(
                        min_lr_ratio = 1.337, ), ),
                warmup_ratio = 1.337,
                max_grad_norm = 1.337,
                weight_decay = 1.337,
                suffix = '',
                wandb_api_key = '',
                wandb_base_url = '',
                wandb_project_name = '',
                wandb_name = '',
                train_on_inputs = True,
                training_type = together.generated.models._fine_tunes_post_request_training_type._fine_tunes_post_request_training_type()
            )
        else:
            return FineTunesPostRequest(
                training_file = '',
                model = '',
        )
        """

    def testFineTunesPostRequest(self):
        """Test FineTunesPostRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
