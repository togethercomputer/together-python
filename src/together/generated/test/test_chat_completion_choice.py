# coding: utf-8

"""
    Together APIs

    The Together REST API. Please see https://docs.together.ai for more details.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from together.generated.models.chat_completion_choice import ChatCompletionChoice


class TestChatCompletionChoice(unittest.TestCase):
    """ChatCompletionChoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionChoice:
        """Test ChatCompletionChoice
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChatCompletionChoice`
        """
        model = ChatCompletionChoice()
        if include_optional:
            return ChatCompletionChoice(
                index = 56,
                finish_reason = 'stop',
                logprobs = together.generated.models.logprobs_part.LogprobsPart(
                    token_ids = [
                        1.337
                        ],
                    tokens = [
                        ''
                        ],
                    token_logprobs = [
                        1.337
                        ], ),
                delta = together.generated.models.chat_completion_choice_delta.ChatCompletionChoiceDelta(
                    token_id = 56,
                    role = 'system',
                    content = '',
                    tool_calls = [
                        together.generated.models.tool_choice.ToolChoice(
                            index = 1.337,
                            id = '',
                            type = 'function',
                            function = together.generated.models.tool_choice_function.ToolChoice_function(
                                name = 'function_name',
                                arguments = '', ), )
                        ],
                    function_call = together.generated.models.chat_completion_choice_delta_function_call.ChatCompletionChoiceDelta_function_call(
                        arguments = '',
                        name = '', ), )
            )
        else:
            return ChatCompletionChoice(
                index = 56,
                finish_reason = 'stop',
                delta = together.generated.models.chat_completion_choice_delta.ChatCompletionChoiceDelta(
                    token_id = 56,
                    role = 'system',
                    content = '',
                    tool_calls = [
                        together.generated.models.tool_choice.ToolChoice(
                            index = 1.337,
                            id = '',
                            type = 'function',
                            function = together.generated.models.tool_choice_function.ToolChoice_function(
                                name = 'function_name',
                                arguments = '', ), )
                        ],
                    function_call = together.generated.models.chat_completion_choice_delta_function_call.ChatCompletionChoiceDelta_function_call(
                        arguments = '',
                        name = '', ), ),
        )
        """

    def testChatCompletionChoice(self):
        """Test ChatCompletionChoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
