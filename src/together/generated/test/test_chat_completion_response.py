# coding: utf-8

"""
    Together APIs

    The Together REST API. Please see https://docs.together.ai for more details.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from together.generated.models.chat_completion_response import ChatCompletionResponse


class TestChatCompletionResponse(unittest.TestCase):
    """ChatCompletionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionResponse:
        """Test ChatCompletionResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChatCompletionResponse`
        """
        model = ChatCompletionResponse()
        if include_optional:
            return ChatCompletionResponse(
                id = '',
                choices = [
                    together.generated.models.chat_completion_choices_data_inner.ChatCompletionChoicesData_inner(
                        text = '',
                        index = 56,
                        seed = 56,
                        finish_reason = 'stop',
                        message = together.generated.models.chat_completion_message.ChatCompletionMessage(
                            content = '',
                            role = 'assistant',
                            tool_calls = [
                                together.generated.models.tool_choice.ToolChoice(
                                    index = 1.337,
                                    id = '',
                                    type = 'function',
                                    function = together.generated.models.tool_choice_function.ToolChoice_function(
                                        name = 'function_name',
                                        arguments = '', ), )
                                ],
                            function_call = together.generated.models.chat_completion_message_function_call.ChatCompletionMessage_function_call(
                                arguments = '',
                                name = '', ), ),
                        logprobs = null, )
                    ],
                usage = together.generated.models.usage_data.UsageData(
                    prompt_tokens = 56,
                    completion_tokens = 56,
                    total_tokens = 56, ),
                created = 56,
                model = '',
                object = 'chat.completion'
            )
        else:
            return ChatCompletionResponse(
                id = '',
                choices = [
                    together.generated.models.chat_completion_choices_data_inner.ChatCompletionChoicesData_inner(
                        text = '',
                        index = 56,
                        seed = 56,
                        finish_reason = 'stop',
                        message = together.generated.models.chat_completion_message.ChatCompletionMessage(
                            content = '',
                            role = 'assistant',
                            tool_calls = [
                                together.generated.models.tool_choice.ToolChoice(
                                    index = 1.337,
                                    id = '',
                                    type = 'function',
                                    function = together.generated.models.tool_choice_function.ToolChoice_function(
                                        name = 'function_name',
                                        arguments = '', ), )
                                ],
                            function_call = together.generated.models.chat_completion_message_function_call.ChatCompletionMessage_function_call(
                                arguments = '',
                                name = '', ), ),
                        logprobs = null, )
                    ],
                created = 56,
                model = '',
                object = 'chat.completion',
        )
        """

    def testChatCompletionResponse(self):
        """Test ChatCompletionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
