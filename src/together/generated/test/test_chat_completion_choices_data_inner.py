# coding: utf-8

"""
    Together APIs

    The Together REST API. Please see https://docs.together.ai for more details.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from together.generated.models.chat_completion_choices_data_inner import (
    ChatCompletionChoicesDataInner,
)


class TestChatCompletionChoicesDataInner(unittest.TestCase):
    """ChatCompletionChoicesDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionChoicesDataInner:
        """Test ChatCompletionChoicesDataInner
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChatCompletionChoicesDataInner`
        """
        model = ChatCompletionChoicesDataInner()
        if include_optional:
            return ChatCompletionChoicesDataInner(
                text = '',
                index = 56,
                seed = 56,
                finish_reason = 'stop',
                message = together.generated.models.chat_completion_message.ChatCompletionMessage(
                    content = '',
                    role = 'assistant',
                    tool_calls = [
                        together.generated.models.tool_choice.ToolChoice(
                            index = 1.337,
                            id = '',
                            type = 'function',
                            function = together.generated.models.tool_choice_function.ToolChoice_function(
                                name = 'function_name',
                                arguments = '', ), )
                        ],
                    function_call = together.generated.models.chat_completion_message_function_call.ChatCompletionMessage_function_call(
                        arguments = '',
                        name = '', ), ),
                logprobs = None
            )
        else:
            return ChatCompletionChoicesDataInner(
        )
        """

    def testChatCompletionChoicesDataInner(self):
        """Test ChatCompletionChoicesDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
