# coding: utf-8

"""
    Together APIs

    The Together REST API. Please see https://docs.together.ai for more details.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from together.generated.models.chat_completion_request import ChatCompletionRequest


class TestChatCompletionRequest(unittest.TestCase):
    """ChatCompletionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatCompletionRequest:
        """Test ChatCompletionRequest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChatCompletionRequest`
        """
        model = ChatCompletionRequest()
        if include_optional:
            return ChatCompletionRequest(
                messages = [
                    together.generated.models.chat_completion_request_messages_inner.ChatCompletionRequest_messages_inner(
                        role = 'system',
                        content = '', )
                    ],
                model = meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo,
                max_tokens = 56,
                stop = [
                    ''
                    ],
                temperature = 1.337,
                top_p = 1.337,
                top_k = 56,
                context_length_exceeded_behavior = 'error',
                repetition_penalty = 1.337,
                stream = True,
                logprobs = 0,
                echo = True,
                n = 1,
                min_p = 1.337,
                presence_penalty = 1.337,
                frequency_penalty = 1.337,
                logit_bias = {1024=-10.5, 105=21.4},
                seed = 42,
                function_call = None,
                response_format = together.generated.models.chat_completion_request_response_format.ChatCompletionRequest_response_format(
                    type = 'json',
                    schema = {
                        'key' : ''
                        }, ),
                tools = [
                    together.generated.models.tools_part.ToolsPart(
                        type = 'tool_type',
                        function = together.generated.models.tools_part_function.ToolsPart_function(
                            description = 'A description of the function.',
                            name = 'function_name',
                            parameters = { }, ), )
                    ],
                tool_choice = None,
                safety_model = 'safety_model_name'
            )
        else:
            return ChatCompletionRequest(
                messages = [
                    together.generated.models.chat_completion_request_messages_inner.ChatCompletionRequest_messages_inner(
                        role = 'system',
                        content = '', )
                    ],
                model = meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo,
        )
        """

    def testChatCompletionRequest(self):
        """Test ChatCompletionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
