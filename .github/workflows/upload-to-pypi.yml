name: publish

on:
  release:
    types: [published]

env:
  POETRY_VERSION: "2.1.1"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }} + Poetry ${{ env.POETRY_VERSION }}
      uses: "./.github/actions/poetry_setup"
      with:
        python-version: ${{ matrix.python-version }}
        poetry-version: ${{ env.POETRY_VERSION }}
        cache-key: core

    - name: Set up cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

    - name: Build
      run: |
        poetry build

    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.ORANGETIN_PYPI }}
